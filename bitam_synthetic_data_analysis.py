# -*- coding: utf-8 -*-
"""Bitam_synthetic_data_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17A6nSU303gK6pWIpSmrRdmX_0bOVR75u
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

#load the data
df = pd.read_csv('/content/synthetic_data.csv')
df.shape

df.head()

df.columns

"""### 1. Demographic characteristics of policyholders with higher insurance uptake"""

# a. age distribution
age_counts = df['Age'].value_counts()


# Generate charts
plt.figure(figsize=(12, 5))
age_counts.plot(kind='bar', color='blue')
plt.xlabel('Age')
plt.ylabel('Count')
plt.title('Distribution of Policyholders by Age')
plt.show()

# b. Gender distribution
gender_counts = df['Gender'].value_counts()

gender_counts.plot(kind='pie', autopct='%1.1f%%', colors=['lightblue', 'lightcoral'])
plt.title('Distribution of Policyholders by Gender')
plt.show()

# c.Location
location_counts = df['Location'].value_counts()

location_counts.plot(kind='bar', color='green')
plt.xlabel('Location')
plt.ylabel('Count')
plt.title('Distribution of Policyholders by Location')

plt.show()

"""### 2. Impact of policy type and premium amounts on uptake and growth"""

#
policy_type_counts = df['Policy Type'].value_counts()
premium_amounts = df['Premium Amount']

# Generate charts
plt.figure(figsize=(10, 5))
plt.subplot(121)
policy_type_counts.plot(kind='bar', color='purple')
plt.xlabel('Policy Type')
plt.ylabel('Count')
plt.title('Distribution of Policy Types')

plt.subplot(122)
plt.hist(premium_amounts, bins=10, color='orange')
plt.xlabel('Premium Amount')
plt.ylabel('Count')
plt.title('Distribution of Premium Amounts')

plt.tight_layout()
plt.show()

# Scatter Plot: Age vs. Premium Amount
plt.scatter(df['Age'], df['Premium Amount'])
plt.xlabel('Age')
plt.ylabel('Premium Amount')
plt.title('Relationship between Age and Premium Amount')
plt.show()

# Line Plot: Age vs. Premium Amount
sorted_data = df.sort_values('Age')
plt.plot(sorted_data['Age'], sorted_data['Premium Amount'])
plt.xlabel('Age')
plt.ylabel('Premium Amount')
plt.title('Relationship between Age and Premium Amount')
plt.show()

# Box Plot: Policy Type vs. Claim Amount
sns.boxplot(data=df, x='Policy Type', y='Claim Amount')
plt.xlabel('Policy Type')
plt.ylabel('Claim Amount')
plt.title('Comparison of Claim Amounts across Policy Types')
plt.show()

# Violin Plot: Policy Type vs. Claim Amount
sns.violinplot(data=df, x='Policy Type', y='Claim Amount')
plt.xlabel('Policy Type')
plt.ylabel('Claim Amount')
plt.title('Comparison of Claim Amounts across Policy Types')
plt.show()

df.columns

# Grouped Bar Plot: Age, Gender, and Claim Frequency
grouped_data = df.groupby(['Age', 'Gender'])['Claim ID'].count().unstack()
grouped_data.plot(kind='bar', stacked=False)

plt.xlabel('Age')
plt.ylabel('Claim Frequency')
plt.title('Claim Frequency by Age and Gender')
plt.legend(title='Gender', loc='upper right')
plt.xticks(rotation=0)
plt.show()

# Stacked Bar Plot: Age, Gender, and Claim Frequency
grouped_data.plot(kind='bar', stacked=True)
plt.xlabel('Age')
plt.ylabel('Claim Frequency')
plt.title('Claim Frequency by Age and Gender')
plt.legend(title='Gender')
plt.show()

# Bar Plot: Location and Policy Uptake
location_counts = df['Location'].value_counts()
plt.bar(location_counts.index, location_counts.values)
plt.xlabel('Location')
plt.ylabel('Policy Uptake')
plt.title('Policy Uptake by Location')
plt.xticks(rotation=45)
plt.show()

# Scatter Plot Matrix: Age, Gender, and Premium Amount
sns.pairplot(df, vars=['Age', 'Premium Amount'], hue='Gender')
plt.show()

# Heatmap: Age, Gender, and Premium Amount
pivot_table = df.pivot_table(values='Premium Amount', index='Age', columns='Gender', aggfunc='mean')
plt.figure(figsize=(12, 6))
sns.heatmap(pivot_table, cmap='YlGnBu', annot=True)
plt.xlabel('Gender')
plt.ylabel('Age')
plt.title('Relationship between Age, Gender, and Premium Amount')
plt.show()

# Grouped Box Plot: Policy Type, Claim Amount, and Location
plt.figure(figsize=(10, 6))
sns.boxplot(data=df, x='Policy Type', y='Claim Amount', hue='Location')
plt.xlabel('Policy Type')
plt.ylabel('Claim Amount')
plt.title('Distribution of Claim Amounts across Policy Types and Locations')
plt.legend(title='Location')
plt.show()

# Violin Plot: Policy Type, Claim Amount, and Location

plt.figure(figsize=(10, 6))
sns.violinplot(data=df, x='Policy Type', y='Claim Amount', hue='Location')
plt.xlabel('Policy Type')
plt.ylabel('Claim Amount')
plt.title('Distribution of Claim Amounts across Policy Types and Locations')
plt.legend(title='Location')
plt.show()

# Grouped Bar Plot: Age, Gender, and Claim Frequency
age_gender_counts = df.groupby(['Age', 'Gender']).size().unstack()
age_gender_counts.plot(kind='bar', stacked=False)
plt.xlabel('Age')
plt.ylabel('Claim Frequency')
plt.title('Claim Frequency by Age and Gender')
plt.legend(title='Gender')
plt.show()

# Stacked Bar Plot: Age, Gender, and Claim Frequency
age_gender_counts.plot(kind='bar', stacked=True)
plt.xlabel('Age')
plt.ylabel('Claim Frequency')
plt.title('Claim Frequency by Age and Gender')
plt.legend(title='Gender')
plt.show()

# Line Plot: Policy Type, Premium Amount
plt.figure(figsize=(10, 6))
sns.lineplot(data=df, x='Policy Type', y='Premium Amount')
plt.xlabel('Policy Type')
plt.ylabel('Premium Amount')
plt.title('Relationship between Policy Type and Premium Amount')
plt.show()



# Heatmap: Age, Location
age_location = df.pivot_table(values='Age', index='Location', aggfunc='mean')
plt.figure(figsize=(10, 6))
sns.heatmap(data=age_location, cmap='Blues', annot=True, fmt=".1f", cbar_kws={'label': 'Average Age'})
plt.xlabel('Location')
plt.ylabel('Age')
plt.title('Average Age across Locations')
plt.show()

# Scatter Plot: Drop-off Points vs App Login
plt.figure(figsize=(10, 6))
sns.lineplot(data=df, x='Drop-off Points', y='App Login')
plt.xlabel('Drop-off Points')
plt.ylabel('App Login')
plt.title('Comparison of Drop-off Points and App Login')
plt.show()

# Scatter Plot: Drop-off Points vs Feature Usage
plt.figure(figsize=(10, 6))
sns.lineplot(data=df, x='Drop-off Points', y='Feature Usage')
plt.xlabel('Drop-off Points')
plt.ylabel('Feature Usage')
plt.title('Comparison of Drop-off Points and Feature Usage')
plt.show()

# Scatter Plot: Feature Usage vs Experience Rating
plt.figure(figsize=(10, 6))
sns.lineplot(data=df, x='Feature Usage', y='Experience Rating')
plt.xlabel('Feature Usage')
plt.ylabel('Experience Rating')
plt.title('Comparison of Feature Usage and Experience Rating')
plt.show()

# Scatter Plot: Feature Usage vs Ease Rating
plt.figure(figsize=(10, 6))
sns.lineplot(data=df, x='Feature Usage', y='Ease Rating')
plt.xlabel('Feature Usage')
plt.ylabel('Ease Rating')
plt.title('Comparison of Feature Usage and Ease Rating')
plt.show()

# Scatter Plot: Feature Usage vs Responsiveness Rating
plt.figure(figsize=(10, 6))
sns.lineplot(data=df, x='Feature Usage', y='Accuracy Rating')
plt.xlabel('Feature Usage')
plt.ylabel('Responsiveness Rating')
plt.title('Comparison of Feature Usage and Responsiveness Rating')
plt.show()

# Scatter Plot: Feature Usage vs Accuracy Rating
plt.figure(figsize=(10, 6))
sns.lineplot(data=df, x='Feature Usage', y='Accuracy Rating')
plt.xlabel('Feature Usage')
plt.ylabel('Accuracy Rating')
plt.title('Comparison of Feature Usage and Accuracy Rating')
plt.show()









